# $Id$
# shellcheck disable=SC2034,SC2148,SC2154
# Maintainer: Masato TOYOSHIMA <phoepsolonix at gmail dot com>
# Contributor: UTUMI Hirosi <utuhiro78 at yahoo dot co dot jp>
# Contributor: BrLi <brli at chakralinux dot org>
# Contributor: Nocifer <apmichalopoulos at gmail dot com>
# Contributor: Felix Yan <felixonmars@gmail.com>
# Contributor: ponsfoot <cabezon dot hashimoto at gmail dot com>

## Mozc compile option
_bldtype=Release
_mozc_commit=e57a5c801c835c4089d0ad3588ba4fa32507e007
_bcr_commit=ec91320ae496f8de3b2e3dc039b0c3af1b3a9a5e
_branch=fcitx

pkgbase=mozc
pkgname=("fcitx-$pkgbase")
pkgver=2.31.5851.102
pkgrel=16
arch=('x86_64')
url="https://github.com/fcitx/mozc"
license=('Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND LGPL-3.0-only AND MIT AND NAIST-2003')
makedepends=('fcitx' 'fcitx-qt6' 'bazel' 'git' 'python' 'libibus' 'mold')
options=(!lto)
source=(git+https://github.com/fcitx/mozc.git#commit="${_mozc_commit}"
        "bcr::git+https://github.com/bazelbuild/bazel-central-registry.git#commit=${_bcr_commit}")

sha512sums=('fb1164d2460b240fe0cd1dbf229c964c163ceb7ea55c86ef779b3c276529b4c6a3e4506f81766293376e1aaf2ea8f42847bbe9cec2568d793ab038bfb083abfd'
            '7422d6bb794a84e3e2da3fdf6fa2b3cb5576683d3e00f0384d0708f77df23205cb9f64ef116a406a025ddf5c4a29e6ef3ec556fad30bcb66f3743b0b7b63487a')

pkgver() {
  cd "${srcdir}/mozc" || exit
  source <(grep = src/data/version/mozc_version_template.bzl| tr -d ' ')
  printf "%s.%s.%s.%s" "$MAJOR" "$MINOR" "$BUILD_OSS" "$((REVISION+2))"
}

prepare() {
  cd "$srcdir/mozc" || exit
  git submodule update --init --recursive

  cd src || exit

  # use libstdc++ instead of libc++
  sed '/stdlib=libc++/d;/-lc++/d' -i gyp/common.gypi

  # nm -f posix (llvm-nm -f posix)
  sed 's|nm \(.*\)\-f p |nm \1-f posix |' -i third_party/gyp/pylib/gyp/generator/ninja.py

  # disable warning of ANDROID_NDK_HOME.
  sed -e '/register_toolchains("@androidndk\/\/:all")/d' -i MODULE.bazel
}

build() {
  cd "$srcdir/mozc/src" || exit

  # Fix compatibility with google-glog 0.3.3 (symbol conflict)
  CFLAGS="${CFLAGS} -fvisibility=hidden"
  CXXFLAGS="${CXXFLAGS} -fvisibility=hidden"

  # for bazelisk
  #export USE_BAZEL_VERSION=8.2.1

  # The bazel rules have changed, so the cache will be deleted.
  #bazel clean --expunge

  # fcitx4
  # unix/fcitx:fcitx-mozc.so server:mozc_server gui/tool:mozc_tool
  #env _BUILD_TARGETS="unix/fcitx:fcitx-mozc.so server:mozc_server gui/tool:mozc_tool" \
  #
  # bazel only respects CC from environment, not CXXFLAGS and LDFLAGS.
  # Pass them with --cxxopt, and --linkopt.
  ../scripts/build_fcitx_bazel \
      --config release_build \
      --registry="file://${srcdir}/bcr" \
      $(echo "${CFLAGS}"|xargs -n1 echo "--copt") \
      $(echo "${CXXFLAGS}"|xargs -n1 echo "--cxxopt") \
      --linkopt=-fuse-ld=mold \
      $(echo "${LDFLAGS}"|xargs -n1 echo "--linkopt") \
      --copt="-Wno-uninitialized" \
      --host_copt="-Wno-uninitialized" --verbose_failures \

  bazel shutdown
}

install_mozc-common() {
  cd ${srcdir}/mozc/src || exit
  export PREFIX="$pkgdir/usr"
  export _bldtype

  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  # Unicode-3.0
  [ -e data/unicode/JIS0201.TXT ] && head -n 50 data/unicode/JIS0201.TXT > LICENSE.JIS0201
  [ -e data/unicode/JIS0208.TXT ] && head -n 73 data/unicode/JIS0208.TXT > LICENSE.JIS0208
  #[ -e data/unicode/jisx0213-2004-std.txt ] && head -n 22 data/unicode/jisx0213-2004-std.txt > LICENSE.jisx0213-2004-std

  # BSD-3-Clause
  sed -n 1,29p unix/fcitx5/fcitx_key_translator.h > Fcitx5
  sed -i -e 's|^\/\/[ ]\?||g' Fcitx5
  install -Dm644 Fcitx5 "${pkgdir}"/usr/share/licenses/${pkgname}/Fcitx5
  # BSD-3-Clause
  sed -n 67,94p data/installer/credits_en.html > Mozc
  install -Dm644 Mozc "${pkgdir}"/usr/share/licenses/${pkgname}/Mozc
  # BSD-3-Clause
  sed -n 317,344p data/installer/credits_en.html > Breakpad
  install -Dm644 Breakpad "${pkgdir}"/usr/share/licenses/${pkgname}/Breakpad
  # NAIST-2003
  sed -n 355,424p data/installer/credits_en.html > IPAdic
  install -Dm644 IPAdic "${pkgdir}"/usr/share/licenses/${pkgname}/IPAdic
  # BSD-2-Clause
  sed -n 435,457p data/installer/credits_en.html > Japanese-Usage-Dictionary
  install -Dm644 Japanese-Usage-Dictionary "${pkgdir}"/usr/share/licenses/${pkgname}/Japanese-Usage-Dictionary
  # Public Domain Data
  sed -n 468,470p data/installer/credits_en.html > Okinawa-Dictionary
  install -Dm644 Okinawa-Dictionary "${pkgdir}"/usr/share/licenses/${pkgname}/Okinawa-Dictionary
  # BSD-3-Clause
  sed -n 481,513p data/installer/credits_en.html > Protocol-Buffers
  install -Dm644 Protocol-Buffers "${pkgdir}"/usr/share/licenses/${pkgname}/Protocol-Buffers
  # MIT
  sed -n 698,704p data/installer/credits_en.html > Tamachi-Phonetic-Kanji-Alphabet
  install -Dm644 Tamachi-Phonetic-Kanji-Alphabet "${pkgdir}"/usr/share/licenses/${pkgname}/Tamachi-Phonetic-Kanji-Alphabet
  # MIT
  sed -n 762,782p data/installer/credits_en.html > Windows-Implementation-Library
  sed -i -e 's|^[ \t]*||g' Windows-Implementation-Library
  install -Dm644 Windows-Implementation-Library "${pkgdir}"/usr/share/licenses/${pkgname}/Windows-Implementation-Library
}

package_fcitx-mozc() {
  pkgdesc="Fcitx Module for Mozc(the Open Source Edition of Google Japanese Input)"
  depends=('fcitx' 'fcitx-qt6')
  optdepends=('fcitx-configtool')
  provides=('fcitx-mozc')
  conflicts=('fcitx5-mozc' 'ibus-mozc')

  install_mozc-common
  ../scripts/install_server_bazel
  ../scripts/install_fcitx_bazel
}

